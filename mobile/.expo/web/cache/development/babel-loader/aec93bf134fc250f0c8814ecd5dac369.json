{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Swiper from \"react-native-swiper\";\nimport Chat from \"./components/Chat\";\nimport CharacterSheet from \"./components/CharacterSheet\";\nimport Board from \"./components/Board\";\nimport { SocketContext, socket } from \"./components/contexts/socket\";\n\nvar background = require(\"./assets/images/street3.jpg\");\n\nvar App = function App() {\n  return React.createElement(SocketContext.Provider, {\n    value: socket\n  }, React.createElement(Swiper, {\n    style: styles.wrapper,\n    showsButtons: false\n  }, React.createElement(View, {\n    style: styles.slide1\n  }, React.createElement(ImageBackground, {\n    source: background,\n    style: styles.boardImage\n  }, React.createElement(Board, null))), React.createElement(View, {\n    style: styles.slide2\n  }, React.createElement(Chat, null)), React.createElement(View, {\n    style: styles.slide3\n  }, React.createElement(CharacterSheet, null))));\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {},\n  slide1: {\n    flex: 1\n  },\n  slide2: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#ede1e8\"\n  },\n  slide3: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FCF5E5\"\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  boardImage: {\n    resizeMode: \"contain\",\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n    opacity: 50\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/rusty/Documents/Coding/Fullstack Academy/Senior-Phase/Mobile-VTT/mobile/App.js"],"names":["React","Swiper","Chat","CharacterSheet","Board","SocketContext","socket","background","require","App","styles","wrapper","slide1","boardImage","slide2","slide3","StyleSheet","create","flex","justifyContent","backgroundColor","alignItems","text","color","fontSize","fontWeight","resizeMode","width","Dimensions","get","height","opacity"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,IAAP;AACA,OAAOC,cAAP;AACA,OAAOC,KAAP;AACA,SAASC,aAAT,EAAwBC,MAAxB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,+BAA1B;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAEhB,SACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEH;AAA/B,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEI,MAAM,CAACC,OAAtB;AAA+B,IAAA,YAAY,EAAE;AAA7C,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEL,UAAzB;AAAqC,IAAA,KAAK,EAAEG,MAAM,CAACG;AAAnD,KACE,oBAAC,KAAD,OADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,KACE,oBAAC,IAAD,OADF,CANF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,KACE,oBAAC,cAAD,OADF,CATF,CADF,CADF;AAiBD,CAnBD;;AAsBA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,OAAO,EAAE,EADsB;AAE/BC,EAAAA,MAAM,EAAE;AACNM,IAAAA,IAAI,EAAE;AADA,GAFuB;AAQ/BJ,EAAAA,MAAM,EAAE;AACNI,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE,UAFV;AAINC,IAAAA,eAAe,EAAE;AAJX,GARuB;AAc/BL,EAAAA,MAAM,EAAE;AACNG,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNE,IAAAA,UAAU,EAAE,QAHN;AAIND,IAAAA,eAAe,EAAE;AAJX,GAduB;AAoB/BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE;AAHR,GApByB;AAyB/BZ,EAAAA,UAAU,EAAE;AACVa,IAAAA,UAAU,EAAE,SADF;AAEVC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAFtB;AAGVG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAHvB;AAIVC,IAAAA,OAAO,EAAE;AAJC;AAzBmB,CAAlB,CAAf;AAiCA,eAAetB,GAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, ImageBackground, Dimensions } from \"react-native\";\nimport Swiper from \"react-native-swiper\";\n\nimport Chat from \"./components/Chat\";\nimport CharacterSheet from \"./components/CharacterSheet\";\nimport Board from \"./components/Board\";\nimport { SocketContext, socket } from \"./components/contexts/socket\";\n\nconst background = require(\"./assets/images/street3.jpg\");\n\n//I had to modify this a little bit to be a react component, but it still works, so all good.\nconst App = () => {\n  //This block is what's being displayed on screen. Pretty straightforward.\n  return (\n    <SocketContext.Provider value={socket}>\n      <Swiper style={styles.wrapper} showsButtons={false}>\n        <View style={styles.slide1}>\n          <ImageBackground source={background} style={styles.boardImage}>\n            <Board />\n          </ImageBackground>\n        </View>\n        <View style={styles.slide2}>\n          <Chat />\n        </View>\n        <View style={styles.slide3}>\n          <CharacterSheet />\n        </View>\n      </Swiper>\n    </SocketContext.Provider>\n  );\n};\n\n//This block sets the style for what's being displayed in the styles.container line above. Use CSS-esque elements inside the object.\nconst styles = StyleSheet.create({\n  wrapper: {},\n  slide1: {\n    flex: 1,\n    // justifyContent: \"center\",\n    // alignItems: \"center\",\n    // backgroundColor: \"#A9A9A9\",\n  },\n  slide2: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    // alignItems: \"center\",\n    backgroundColor: \"#ede1e8\",\n  },\n  slide3: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FCF5E5\",\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n  },\n  boardImage: {\n    resizeMode: \"contain\",\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n    opacity: 50,\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}