{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback, useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { SocketContext } from \"./contexts/socket\";\n\nvar CharacterSheet = function CharacterSheet() {\n  var socket = useContext(SocketContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      raceOpen = _useState2[0],\n      setRaceOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      raceValue = _useState4[0],\n      setRaceValue = _useState4[1];\n\n  var _useState5 = useState([{\n    label: \"Dragonborn\",\n    value: \"dragonborn\"\n  }, {\n    label: \"Dwarf\",\n    value: \"dwarf\"\n  }, {\n    label: \"Elf\",\n    value: \"elf\"\n  }, {\n    label: \"Gnome\",\n    value: \"gnome\"\n  }, {\n    label: \"Half-Elf\",\n    value: \"half-elf\"\n  }, {\n    label: \"Half-Orc\",\n    value: \"half-orc\"\n  }, {\n    label: \"Halfling\",\n    value: \"halfling\"\n  }, {\n    label: \"Human\",\n    value: \"human\"\n  }, {\n    label: \"Tiefling\",\n    value: \"tiefling\"\n  }, {\n    label: \"Orc\",\n    value: \"orc\"\n  }, {\n    label: \"Leonin\",\n    value: \"leonin\"\n  }, {\n    label: \"Satyr\",\n    value: \"satyr\"\n  }, {\n    label: \"Fairy\",\n    value: \"fairy\"\n  }, {\n    label: \"Harengon\",\n    value: \"harengon\"\n  }, {\n    label: \"Aarakocra\",\n    value: \"aarakocra\"\n  }, {\n    label: \"Genasi\",\n    value: \"genasi\"\n  }, {\n    label: \"Goliath\",\n    value: \"goliath\"\n  }, {\n    label: \"Aasimar\",\n    value: \"aasimar\"\n  }, {\n    label: \"Bugbear\",\n    value: \"bugbear\"\n  }, {\n    label: \"Goblin\",\n    value: \"goblin\"\n  }, {\n    label: \"Firbolg\",\n    value: \"firbolg\"\n  }, {\n    label: \"Hobgoblin\",\n    value: \"hobgoblin\"\n  }, {\n    label: \"Kenku\",\n    value: \"kenku\"\n  }, {\n    label: \"Kobold\",\n    value: \"kobold\"\n  }, {\n    label: \"Lizardfolk\",\n    value: \"lizardfolk\"\n  }, {\n    label: \"Tabaxi\",\n    value: \"tabaxi\"\n  }, {\n    label: \"Triton\",\n    value: \"triton\"\n  }, {\n    label: \"Yuan-ti Pureblood\",\n    value: \"yuan-ti pureblood\"\n  }, {\n    label: \"Feral Tiefling\",\n    value: \"feral tiefling\"\n  }, {\n    label: \"Tortle\",\n    value: \"tortle\"\n  }, {\n    label: \"Changeling\",\n    value: \"changeling\"\n  }, {\n    label: \"Kalashtar\",\n    value: \"kalashtar\"\n  }, {\n    label: \"Shifter\",\n    value: \"shifter\"\n  }, {\n    label: \"Warforged\",\n    value: \"warforged\"\n  }, {\n    label: \"Gith\",\n    value: \"gith\"\n  }, {\n    label: \"Centaur\",\n    value: \"centaur\"\n  }, {\n    label: \"Loxodon\",\n    value: \"loxodon\"\n  }, {\n    label: \"Minotaur\",\n    value: \"minotaur\"\n  }, {\n    label: \"Simic Hybrid\",\n    value: \"simic hybrid\"\n  }, {\n    label: \"Vedalken\",\n    value: \"vedalken\"\n  }, {\n    label: \"Verdan\",\n    value: \"verdan\"\n  }, {\n    label: \"Locathah\",\n    value: \"locathah\"\n  }, {\n    label: \"Grung\",\n    value: \"grung\"\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      raceItems = _useState6[0],\n      setRaceItems = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      classOpen = _useState8[0],\n      setClassOpen = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      classValue = _useState10[0],\n      setClassValue = _useState10[1];\n\n  var _useState11 = useState([{\n    label: \"Barbarian\",\n    value: \"barbarian\"\n  }, {\n    label: \"Bard\",\n    value: \"bard\"\n  }, {\n    label: \"Cleric\",\n    value: \"cleric\"\n  }, {\n    label: \"Druid\",\n    value: \"druid\"\n  }, {\n    label: \"Fighter\",\n    value: \"fighter\"\n  }, {\n    label: \"Monk\",\n    value: \"monk\"\n  }, {\n    label: \"Paladin\",\n    value: \"paladin\"\n  }, {\n    label: \"Ranger\",\n    value: \"ranger\"\n  }, {\n    label: \"Rogue\",\n    value: \"rogue\"\n  }, {\n    label: \"Sorcerer\",\n    value: \"sorcerer\"\n  }, {\n    label: \"Warlock\",\n    value: \"warlock\"\n  }, {\n    label: \"Wizard\",\n    value: \"wizard\"\n  }]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      classItems = _useState12[0],\n      setClassItems = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      nameIsPressed = _useState14[0],\n      setNameIsPressed = _useState14[1];\n\n  var _useState15 = useState(\"No Name\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      characterName = _useState16[0],\n      setCharacterName = _useState16[1];\n\n  var _useState17 = useState(\"\" + characterName),\n      _useState18 = _slicedToArray(_useState17, 2),\n      nameInput = _useState18[0],\n      onChangeNameInput = _useState18[1];\n\n  var _useState19 = useState(9),\n      _useState20 = _slicedToArray(_useState19, 2),\n      strength = _useState20[0],\n      setStrength = _useState20[1];\n\n  var _useState21 = useState(-1),\n      _useState22 = _slicedToArray(_useState21, 2),\n      strengthMod = _useState22[0],\n      setStrengthMod = _useState22[1];\n\n  var _useState23 = useState(18),\n      _useState24 = _slicedToArray(_useState23, 2),\n      dexterity = _useState24[0],\n      setDexterity = _useState24[1];\n\n  var _useState25 = useState(4),\n      _useState26 = _slicedToArray(_useState25, 2),\n      dexterityMod = _useState26[0],\n      setDexterityMod = _useState26[1];\n\n  var _useState27 = useState(12),\n      _useState28 = _slicedToArray(_useState27, 2),\n      constitution = _useState28[0],\n      setConstitution = _useState28[1];\n\n  var _useState29 = useState(1),\n      _useState30 = _slicedToArray(_useState29, 2),\n      constitutionMod = _useState30[0],\n      setConstitutionMod = _useState30[1];\n\n  var _useState31 = useState(18),\n      _useState32 = _slicedToArray(_useState31, 2),\n      intelligence = _useState32[0],\n      setIntelligence = _useState32[1];\n\n  var _useState33 = useState(+4),\n      _useState34 = _slicedToArray(_useState33, 2),\n      intelligenceMod = _useState34[0],\n      setIntelligenceMod = _useState34[1];\n\n  var _useState35 = useState(10),\n      _useState36 = _slicedToArray(_useState35, 2),\n      wisdom = _useState36[0],\n      setWisdom = _useState36[1];\n\n  var _useState37 = useState(0),\n      _useState38 = _slicedToArray(_useState37, 2),\n      wisdomMod = _useState38[0],\n      setWisdomMod = _useState38[1];\n\n  var _useState39 = useState(14),\n      _useState40 = _slicedToArray(_useState39, 2),\n      charisma = _useState40[0],\n      setCharisma = _useState40[1];\n\n  var _useState41 = useState(2),\n      _useState42 = _slicedToArray(_useState41, 2),\n      charismaMod = _useState42[0],\n      setCharismaMod = _useState42[1];\n\n  var onRaceOpen = useCallback(function () {\n    setClassOpen(false);\n  }, []);\n  var onClassOpen = useCallback(function () {\n    setRaceOpen(false);\n  }, []);\n  var onPressName = useCallback(function () {\n    setNameIsPressed(!nameIsPressed);\n  }, [nameIsPressed, setNameIsPressed]);\n  var changeName = useCallback(function () {\n    setCharacterName(nameInput);\n    setNameIsPressed(!nameIsPressed);\n  }, [setCharacterName, nameInput, setNameIsPressed, nameIsPressed]);\n  useEffect(function () {\n    var name = {\n      name: characterName,\n      id: socket.id\n    };\n    socket.emit(\"name\", name);\n  }, [characterName]);\n\n  var pressAttribute = function pressAttribute(event) {\n    console.log(event.target);\n    var attributeMod = {\n      attribute: \"attribute\",\n      mod: 0,\n      roll: 0\n    };\n\n    switch (attribute) {\n      case \"strength\":\n        attributeMod.mod = strengthMod;\n        break;\n\n      case \"dexterity\":\n        attributeMod.mod = dexterityMod;\n        break;\n\n      case \"constitution\":\n        attributeMod.mod = constitutionMod;\n        break;\n\n      case \"intelligence\":\n        attributeMod.mod = intelligenceMod;\n        break;\n\n      case \"wisdom\":\n        attributeMod.mod = wisdomMod;\n        break;\n\n      case \"charisma\":\n        attributeMod.mod = charismaMod;\n        break;\n\n      default:\n        break;\n    }\n\n    emitAttribute(attributeMod);\n  };\n\n  var emitAttribute = function emitAttribute(attributeMod) {\n    attributeMod.roll = Math.ceil(Math.random() * 20);\n    console.log(attributeMod.roll);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Pressable, {\n    onLongPress: onPressName,\n    style: styles.nameplateContainer\n  }, nameIsPressed ? React.createElement(TextInput, {\n    style: styles.textInput,\n    autocorrect: false,\n    onChangeText: onChangeNameInput,\n    value: nameInput,\n    onSubmitEditing: changeName\n  }) : React.createElement(Text, {\n    style: styles.nameplate\n  }, \"Character Name: \", characterName)), React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.picker\n  }, React.createElement(Text, null, \"Race:\"), React.createElement(DropDownPicker, {\n    open: raceOpen,\n    value: raceValue,\n    items: raceItems,\n    setOpen: setRaceOpen,\n    setValue: setRaceValue,\n    setItems: setRaceItems,\n    onOpen: onRaceOpen,\n    onChangeValue: function onChangeValue(value) {\n      console.log(value);\n    }\n  })), React.createElement(View, {\n    style: styles.picker\n  }, React.createElement(Text, null, \"Class:\"), React.createElement(DropDownPicker, {\n    open: classOpen,\n    value: classValue,\n    items: classItems,\n    setOpen: setClassOpen,\n    setValue: setClassValue,\n    setItems: setClassItems,\n    onOpen: onClassOpen\n  }))), React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.attributeBox\n  }, React.createElement(Text, {\n    style: styles.attributeName,\n    nativeID: \"strength\",\n    onPress: pressAttribute\n  }, \"Strength\"), React.createElement(Text, {\n    style: styles.attributeModifier\n  }, strengthMod >= 0 ? \"+\" + strengthMod : strengthMod), React.createElement(Text, {\n    style: styles.attributeNumber\n  }, strength)), React.createElement(View, {\n    style: styles.attributeBox\n  }, React.createElement(Text, {\n    style: styles.attributeName,\n    nativeID: \"dexterity\",\n    onPress: pressAttribute\n  }, \"Dexterity\"), React.createElement(Text, {\n    style: styles.attributeModifier\n  }, dexterityMod >= 0 ? \"+\" + dexterityMod : dexterityMod), React.createElement(Text, {\n    style: styles.attributeNumber\n  }, dexterity)), React.createElement(View, {\n    style: styles.attributeBox\n  }, React.createElement(Text, {\n    style: styles.attributeName,\n    nativeID: \"constitution\",\n    onPress: pressAttribute\n  }, \"Constitution\"), React.createElement(Text, {\n    style: styles.attributeModifier\n  }, constitutionMod >= 0 ? \"+\" + constitutionMod : constitutionMod), React.createElement(Text, {\n    style: styles.attributeNumber\n  }, constitution)), React.createElement(View, {\n    style: styles.attributeBox\n  }, React.createElement(Text, {\n    style: styles.attributeName,\n    nativeID: \"intelligence\",\n    onPress: pressAttribute\n  }, \"Intelligence\"), React.createElement(Text, {\n    style: styles.attributeModifier\n  }, intelligenceMod >= 0 ? \"+\" + intelligenceMod : intelligenceMod), React.createElement(Text, {\n    style: styles.attributeNumber\n  }, intelligence)), React.createElement(View, {\n    style: styles.attributeBox\n  }, React.createElement(Text, {\n    style: styles.attributeName,\n    nativeID: \"wisdom\",\n    onPress: pressAttribute\n  }, \"Wisdom\"), React.createElement(Text, {\n    style: styles.attributeModifier\n  }, wisdomMod >= 0 ? \"+\" + wisdomMod : wisdomMod), React.createElement(Text, {\n    style: styles.attributeNumber\n  }, wisdom)), React.createElement(View, {\n    style: styles.attributeBox\n  }, React.createElement(Text, {\n    style: styles.attributeName,\n    nativeID: \"charisma\",\n    onPress: pressAttribute\n  }, \"Charisma\"), React.createElement(Text, {\n    style: styles.attributeModifier\n  }, charismaMod >= 0 ? \"+\" + charismaMod : charismaMod), React.createElement(Text, {\n    style: styles.attributeNumber\n  }, charisma))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    flex: 1,\n    padding: 10\n  },\n  picker: {\n    flex: 1,\n    flexDirection: \"column\",\n    marginTop: 5\n  },\n  textInput: {\n    height: 40,\n    width: 350,\n    paddingLeft: 10,\n    borderWidth: 1,\n    backgroundColor: \"#fff\",\n    borderRadius: 20,\n    alignSelf: \"center\"\n  },\n  nameplateContainer: {\n    marginTop: 40\n  },\n  nameplate: {\n    fontWeight: \"bold\"\n  },\n  attributeBox: {\n    flex: 1,\n    flexDirection: \"column\",\n    borderRadius: 15,\n    backgroundColor: \"white\",\n    width: Dimensions.get(\"window\").width / 6 - 6,\n    margin: 1,\n    padding: 3,\n    alignItems: \"center\",\n    height: 70,\n    borderWidth: 0.2,\n    borderColor: \"black\"\n  },\n  attributeName: {\n    fontSize: 7\n  },\n  attributeModifier: {\n    fontSize: 28\n  },\n  attributeNumber: {\n    fontSize: 14\n  }\n});\nexport default CharacterSheet;","map":{"version":3,"sources":["C:/Users/rusty/Documents/Coding/Fullstack Academy/Senior-Phase/Mobile-VTT/mobile/components/CharacterSheet.js"],"names":["React","useState","useCallback","useEffect","useContext","DropDownPicker","SocketContext","CharacterSheet","socket","raceOpen","setRaceOpen","raceValue","setRaceValue","label","value","raceItems","setRaceItems","classOpen","setClassOpen","classValue","setClassValue","classItems","setClassItems","nameIsPressed","setNameIsPressed","characterName","setCharacterName","nameInput","onChangeNameInput","strength","setStrength","strengthMod","setStrengthMod","dexterity","setDexterity","dexterityMod","setDexterityMod","constitution","setConstitution","constitutionMod","setConstitutionMod","intelligence","setIntelligence","intelligenceMod","setIntelligenceMod","wisdom","setWisdom","wisdomMod","setWisdomMod","charisma","setCharisma","charismaMod","setCharismaMod","onRaceOpen","onClassOpen","onPressName","changeName","name","id","emit","pressAttribute","event","console","log","target","attributeMod","attribute","mod","roll","emitAttribute","Math","ceil","random","styles","nameplateContainer","textInput","nameplate","container","picker","attributeBox","attributeName","attributeModifier","attributeNumber","StyleSheet","create","flexDirection","flex","padding","marginTop","height","width","paddingLeft","borderWidth","backgroundColor","borderRadius","alignSelf","fontWeight","Dimensions","get","margin","alignItems","borderColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useContext } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Pressable,\r\n  TextInput,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\n\r\nimport { SocketContext } from \"./contexts/socket\";\r\n\r\nconst CharacterSheet = () => {\r\n  const socket = useContext(SocketContext);\r\n\r\n  //These states are storing my content for the race list. They look a little different because dropdown-picker is looking for these states specifically.\r\n  //RaceOpen is a boolean indicating whether the dropdown menu is open or closed.\r\n  //RaceValue is the current value of the menu. It starts with nothing selected, so it's null, but will update with whatever choice the user chooses.\r\n  //RaceItems is just the list of all the races you find in the dropdown menu.\r\n  const [raceOpen, setRaceOpen] = useState(false);\r\n  const [raceValue, setRaceValue] = useState(null);\r\n  const [raceItems, setRaceItems] = useState([\r\n    { label: \"Dragonborn\", value: \"dragonborn\" },\r\n    { label: \"Dwarf\", value: \"dwarf\" },\r\n    { label: \"Elf\", value: \"elf\" },\r\n    { label: \"Gnome\", value: \"gnome\" },\r\n    { label: \"Half-Elf\", value: \"half-elf\" },\r\n    { label: \"Half-Orc\", value: \"half-orc\" },\r\n    { label: \"Halfling\", value: \"halfling\" },\r\n    { label: \"Human\", value: \"human\" },\r\n    { label: \"Tiefling\", value: \"tiefling\" },\r\n    { label: \"Orc\", value: \"orc\" },\r\n    { label: \"Leonin\", value: \"leonin\" },\r\n    { label: \"Satyr\", value: \"satyr\" },\r\n    { label: \"Fairy\", value: \"fairy\" },\r\n    { label: \"Harengon\", value: \"harengon\" },\r\n    { label: \"Aarakocra\", value: \"aarakocra\" },\r\n    { label: \"Genasi\", value: \"genasi\" },\r\n    { label: \"Goliath\", value: \"goliath\" },\r\n    { label: \"Aasimar\", value: \"aasimar\" },\r\n    { label: \"Bugbear\", value: \"bugbear\" },\r\n    { label: \"Goblin\", value: \"goblin\" },\r\n    { label: \"Firbolg\", value: \"firbolg\" },\r\n    { label: \"Hobgoblin\", value: \"hobgoblin\" },\r\n    { label: \"Kenku\", value: \"kenku\" },\r\n    { label: \"Kobold\", value: \"kobold\" },\r\n    { label: \"Lizardfolk\", value: \"lizardfolk\" },\r\n    { label: \"Tabaxi\", value: \"tabaxi\" },\r\n    { label: \"Triton\", value: \"triton\" },\r\n    { label: \"Yuan-ti Pureblood\", value: \"yuan-ti pureblood\" },\r\n    { label: \"Feral Tiefling\", value: \"feral tiefling\" },\r\n    { label: \"Tortle\", value: \"tortle\" },\r\n    { label: \"Changeling\", value: \"changeling\" },\r\n    { label: \"Kalashtar\", value: \"kalashtar\" },\r\n    { label: \"Shifter\", value: \"shifter\" },\r\n    { label: \"Warforged\", value: \"warforged\" },\r\n    { label: \"Gith\", value: \"gith\" },\r\n    { label: \"Centaur\", value: \"centaur\" },\r\n    { label: \"Loxodon\", value: \"loxodon\" },\r\n    { label: \"Minotaur\", value: \"minotaur\" },\r\n    { label: \"Simic Hybrid\", value: \"simic hybrid\" },\r\n    { label: \"Vedalken\", value: \"vedalken\" },\r\n    { label: \"Verdan\", value: \"verdan\" },\r\n    { label: \"Locathah\", value: \"locathah\" },\r\n    { label: \"Grung\", value: \"grung\" },\r\n  ]);\r\n  const [classOpen, setClassOpen] = useState(false);\r\n  const [classValue, setClassValue] = useState(null);\r\n  const [classItems, setClassItems] = useState([\r\n    { label: \"Barbarian\", value: \"barbarian\" },\r\n    { label: \"Bard\", value: \"bard\" },\r\n    { label: \"Cleric\", value: \"cleric\" },\r\n    { label: \"Druid\", value: \"druid\" },\r\n    { label: \"Fighter\", value: \"fighter\" },\r\n    { label: \"Monk\", value: \"monk\" },\r\n    { label: \"Paladin\", value: \"paladin\" },\r\n    { label: \"Ranger\", value: \"ranger\" },\r\n    { label: \"Rogue\", value: \"rogue\" },\r\n    { label: \"Sorcerer\", value: \"sorcerer\" },\r\n    { label: \"Warlock\", value: \"warlock\" },\r\n    { label: \"Wizard\", value: \"wizard\" },\r\n  ]);\r\n  const [nameIsPressed, setNameIsPressed] = useState(false);\r\n  const [characterName, setCharacterName] = useState(\"No Name\");\r\n  const [nameInput, onChangeNameInput] = useState(`${characterName}`);\r\n  const [strength, setStrength] = useState(9);\r\n  const [strengthMod, setStrengthMod] = useState(-1);\r\n  const [dexterity, setDexterity] = useState(18);\r\n  const [dexterityMod, setDexterityMod] = useState(4);\r\n  const [constitution, setConstitution] = useState(12);\r\n  const [constitutionMod, setConstitutionMod] = useState(1);\r\n  const [intelligence, setIntelligence] = useState(18);\r\n  const [intelligenceMod, setIntelligenceMod] = useState(+4);\r\n  const [wisdom, setWisdom] = useState(10);\r\n  const [wisdomMod, setWisdomMod] = useState(0);\r\n  const [charisma, setCharisma] = useState(14);\r\n  const [charismaMod, setCharismaMod] = useState(2);\r\n\r\n  const onRaceOpen = useCallback(() => {\r\n    setClassOpen(false);\r\n  }, []);\r\n  const onClassOpen = useCallback(() => {\r\n    setRaceOpen(false);\r\n  }, []);\r\n  const onPressName = useCallback(() => {\r\n    setNameIsPressed(!nameIsPressed);\r\n  }, [nameIsPressed, setNameIsPressed]);\r\n  const changeName = useCallback(() => {\r\n    setCharacterName(nameInput);\r\n    setNameIsPressed(!nameIsPressed);\r\n  }, [setCharacterName, nameInput, setNameIsPressed, nameIsPressed]);\r\n\r\n  useEffect(() => {\r\n    const name = {\r\n      name: characterName,\r\n      id: socket.id,\r\n    };\r\n    socket.emit(\"name\", name);\r\n  }, [characterName]);\r\n\r\n  const pressAttribute = (event) => {\r\n    console.log(event.target);\r\n\r\n    let attributeMod = {\r\n      attribute: \"attribute\",\r\n      mod: 0,\r\n      roll: 0,\r\n    };\r\n    switch (attribute) {\r\n      case \"strength\":\r\n        attributeMod.mod = strengthMod;\r\n        break;\r\n      case \"dexterity\":\r\n        attributeMod.mod = dexterityMod;\r\n        break;\r\n      case \"constitution\":\r\n        attributeMod.mod = constitutionMod;\r\n        break;\r\n      case \"intelligence\":\r\n        attributeMod.mod = intelligenceMod;\r\n        break;\r\n      case \"wisdom\":\r\n        attributeMod.mod = wisdomMod;\r\n        break;\r\n      case \"charisma\":\r\n        attributeMod.mod = charismaMod;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    emitAttribute(attributeMod);\r\n  };\r\n\r\n  const emitAttribute = (attributeMod) => {\r\n    attributeMod.roll = Math.ceil(Math.random() * 20);\r\n    console.log(attributeMod.roll);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pressable onLongPress={onPressName} style={styles.nameplateContainer}>\r\n        {nameIsPressed ? (\r\n          <TextInput\r\n            style={styles.textInput}\r\n            autocorrect={false}\r\n            onChangeText={onChangeNameInput}\r\n            value={nameInput}\r\n            onSubmitEditing={changeName}\r\n          />\r\n        ) : (\r\n          <Text style={styles.nameplate}>Character Name: {characterName}</Text>\r\n        )}\r\n      </Pressable>\r\n      <View style={styles.container}>\r\n        <View style={styles.picker}>\r\n          <Text>Race:</Text>\r\n          <DropDownPicker\r\n            open={raceOpen}\r\n            value={raceValue}\r\n            items={raceItems}\r\n            setOpen={setRaceOpen}\r\n            setValue={setRaceValue}\r\n            setItems={setRaceItems}\r\n            onOpen={onRaceOpen}\r\n            onChangeValue={(value) => {\r\n              console.log(value);\r\n            }}\r\n          />\r\n        </View>\r\n        <View style={styles.picker}>\r\n          <Text>Class:</Text>\r\n          <DropDownPicker\r\n            open={classOpen}\r\n            value={classValue}\r\n            items={classItems}\r\n            setOpen={setClassOpen}\r\n            setValue={setClassValue}\r\n            setItems={setClassItems}\r\n            onOpen={onClassOpen}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.container}>\r\n        <View style={styles.attributeBox}>\r\n          <Text\r\n            style={styles.attributeName}\r\n            nativeID=\"strength\"\r\n            onPress={pressAttribute}\r\n          >\r\n            Strength\r\n          </Text>\r\n          <Text style={styles.attributeModifier}>\r\n            {strengthMod >= 0 ? \"+\" + strengthMod : strengthMod}\r\n          </Text>\r\n          <Text style={styles.attributeNumber}>{strength}</Text>\r\n        </View>\r\n        <View style={styles.attributeBox}>\r\n          <Text\r\n            style={styles.attributeName}\r\n            nativeID=\"dexterity\"\r\n            onPress={pressAttribute}\r\n          >\r\n            Dexterity\r\n          </Text>\r\n          <Text style={styles.attributeModifier}>\r\n            {dexterityMod >= 0 ? \"+\" + dexterityMod : dexterityMod}\r\n          </Text>\r\n          <Text style={styles.attributeNumber}>{dexterity}</Text>\r\n        </View>\r\n        <View style={styles.attributeBox}>\r\n          <Text\r\n            style={styles.attributeName}\r\n            nativeID=\"constitution\"\r\n            onPress={pressAttribute}\r\n          >\r\n            Constitution\r\n          </Text>\r\n          <Text style={styles.attributeModifier}>\r\n            {constitutionMod >= 0 ? \"+\" + constitutionMod : constitutionMod}\r\n          </Text>\r\n          <Text style={styles.attributeNumber}>{constitution}</Text>\r\n        </View>\r\n        <View style={styles.attributeBox}>\r\n          <Text\r\n            style={styles.attributeName}\r\n            nativeID=\"intelligence\"\r\n            onPress={pressAttribute}\r\n          >\r\n            Intelligence\r\n          </Text>\r\n          <Text style={styles.attributeModifier}>\r\n            {intelligenceMod >= 0 ? \"+\" + intelligenceMod : intelligenceMod}\r\n          </Text>\r\n          <Text style={styles.attributeNumber}>{intelligence}</Text>\r\n        </View>\r\n        <View style={styles.attributeBox}>\r\n          <Text\r\n            style={styles.attributeName}\r\n            nativeID=\"wisdom\"\r\n            onPress={pressAttribute}\r\n          >\r\n            Wisdom\r\n          </Text>\r\n          <Text style={styles.attributeModifier}>\r\n            {wisdomMod >= 0 ? \"+\" + wisdomMod : wisdomMod}\r\n          </Text>\r\n          <Text style={styles.attributeNumber}>{wisdom}</Text>\r\n        </View>\r\n        <View style={styles.attributeBox}>\r\n          <Text\r\n            style={styles.attributeName}\r\n            nativeID=\"charisma\"\r\n            onPress={pressAttribute}\r\n          >\r\n            Charisma\r\n          </Text>\r\n          <Text style={styles.attributeModifier}>\r\n            {charismaMod >= 0 ? \"+\" + charismaMod : charismaMod}\r\n          </Text>\r\n          <Text style={styles.attributeNumber}>{charisma}</Text>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  picker: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    marginTop: 5,\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: 350,\r\n    paddingLeft: 10,\r\n    borderWidth: 1,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n  nameplateContainer: {\r\n    marginTop: 40,\r\n  },\r\n  nameplate: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  attributeBox: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    borderRadius: 15,\r\n    backgroundColor: \"white\",\r\n    width: Dimensions.get(\"window\").width / 6 - 6,\r\n    margin: 1,\r\n    padding: 3,\r\n    alignItems: \"center\",\r\n    height: 70,\r\n    borderWidth: 0.2,\r\n    borderColor: \"black\",\r\n  },\r\n  attributeName: {\r\n    fontSize: 7,\r\n  },\r\n  attributeModifier: {\r\n    fontSize: 28,\r\n  },\r\n  attributeNumber: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default CharacterSheet;\r\n"]},"metadata":{},"sourceType":"module"}